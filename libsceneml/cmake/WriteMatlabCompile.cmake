###########################################################
#	Write the Matlab compile script to compile the MEX interface to SceneML
###########################################################
#INCLUDE( ${CMAKE_ROOT}/Modules/CheckIncludeFile.cmake )
#INCLUDE( ${CMAKE_ROOT}/Modules/CheckFunctionExists.cmake )

set( COMPILE_M ${PROJECT_BASE_DIR}/private/compile.m )
set( SRCS	sceneml.cpp common.cpp )

# Only write config.h once
if ( WROTE_COMPILE_M )
	message( STATUS "Not writing compileScene.m -- wrote it previously" )
else ( WROTE_COMPILE_M )  
	message( STATUS "Writing compileScene.m" )
	set( WROTE_COMPILE_M TRUE CACHE BOOL "Wrote compileScene.m" )

	file( WRITE ${COMPILE_M}	"% compileScene.m - Generated by CMakeLists.txt \n\n" )
	file( APPEND ${COMPILE_M}	"clear mex\n\n" )
	
	file( APPEND ${COMPILE_M}	"clear mex\n" )
	file( APPEND ${COMPILE_M}	"files = {")
	
	foreach( source_file ${SRCS} )
		file( APPEND ${COMPILE_M}	"'${source_file}', ")
	endforeach(demo_prog)
	file( APPEND ${COMPILE_M}	"};\n")

	file( APPEND ${COMPILE_M}	"mexflags = '';\n")
	file( APPEND ${COMPILE_M}	"if (ispc)\n")
	file( APPEND ${COMPILE_M}	"\t% must change /MD to /ML in mexopts.bat\n")
	file( APPEND ${COMPILE_M}	"\tmexflags = [mexflags sprintf('-O -I\\include -L\\lib -L${ODE_HOME}\lib\release -l%s  -lode', libname)];\n")
	file( APPEND ${COMPILE_M}	"elseif (isunix)\n")
	file( APPEND ${COMPILE_M}	"\tmexflags = [mexflags '-O -I/include -L/lib -L${ODE_HOME}\lib\release'];\n")
	file( APPEND ${COMPILE_M}	"\tmexflags = [mexflags sprintf('-l%s -lode', libname)];\n")
	file( APPEND ${COMPILE_M}	"end\n\n")
	
	file( APPEND ${COMPILE_M}	"for file = files\n")
	file( APPEND ${COMPILE_M}	"\tmexflags = [mexflags ' %s' char(file)];\n")
	file( APPEND ${COMPILE_M}	"end\n\n")
	
	file( APPEND ${COMPILE_M}	"mexstr = ['mex ' mexflags];\n")
	file( APPEND ${COMPILE_M}	"fprintf('%s\n', mexstr);\n")
	file( APPEND ${COMPILE_M}	"eval(mexstr);")
endif ( WROTE_COMPILE_M )  
